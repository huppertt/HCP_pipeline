function TRUST_analysis(subjid,outfolder)

if(nargin<3)
    force=false;
end
if(nargin<2)
    outfolder='/aionraid/huppertt/XnatDB/ROS-MOVE';
end

if(~force & exist(fullfile(outfolder,subjid,'TRUST','TRUST.nii.gz'))==2)
    return
end

system(['mkdir -p ' outfolder filesep subjid filesep 'TRUST']);

f=fullfile(outfolder,subjid,'unprocessed','3T','TRUST',[subjid '_3T_TRUST.nii.gz']);
copyfile(f,fullfile(outfolder,subjid,'TRUST',[subjid '_3T_TRUST.nii.gz']));

if ~exist(fullfile(outfolder,subjid,'TRUST','standard2str.nii.gz'))
    % Generates inverse warp from MNI to ACPC-aligned native
    system(['invwarp -v '...
        ' -w ' fullfile(outfolder,subjid,'T1w','BrainExtraction_FNIRTbased','str2standard.nii.gz')...
        ' -r ' fullfile(outfolder,subjid,'T1w','BrainExtraction_FNIRTbased','T1w_acpc_to_MNI_nonlin.nii.gz')...
        ' -o ' fullfile(outfolder,subjid,'TRUST','standard2str.nii.gz')]);
end

if ~exist(fullfile(outfolder,subjid,'TRUST','inv_acpc.mat'))
    % Generates inverse xfm matrix from ACPC to native
    system(['convert_xfm -inverse ' fullfile(outfolder,subjid,'T1w','xfms','acpc.mat')...
        ' -omat ' fullfile(outfolder,subjid,'TRUST','inv_acpc.mat')]);
end

% Applies MNI-to-ACPC warp to PCA_vessels_MNI and follows with linear xfm
% from ACPC-to-native
system(['applywarp -v '...
    ' -i ' fullfile(outfolder,subjid,'PCA','PCA_vessels_MNI.nii.gz')...
    ' -r ' fullfile(outfolder,subjid,'T1w','T1w.nii.gz')...
    ' --postmat=' fullfile(outfolder,subjid,'TRUST','inv_acpc.mat') ...
    ' --warp=' fullfile(outfolder,subjid,'TRUST','standard2str.nii.gz') ...
    ' -o ' fullfile(outfolder,subjid,'TRUST','PCA_vessels.nii.gz')]);

% Uses mri_convert to transform subject PCA to TRUST slice dimensions
system(['mri_convert -rt nearest '...
    ' -i ' fullfile(outfolder,subjid,'TRUST','PCA.nii.gz') ...
    ' -o ' fullfile(outfolder,subjid,'TRUST','PCA_slice.nii.gz')...
    ' --like ' fullfile(outfolder,subjid,'TRUST',[subjid '_3T_TRUST.nii.gz'])]);

% Applies MNI-to-ACPC warp to labeled PCA atlas and follows with linear xfm
% from ACPC-to-native
system(['applywarp -v --interp=nn '...
    ' -i ' fullfile(outfolder,'PCA_Atlas_labeled.nii.gz')...
    ' -r ' fullfile(outfolder,subjid,'T1w','T1w.nii.gz')...
    ' --postmat=' fullfile(outfolder,subjid,'TRUST','inv_acpc.mat')...
    ' --warp=' fullfile(outfolder,subjid,'TRUST','standard2str.nii.gz')...
    ' -o ' fullfile(outfolder,subjid,'TRUST','PCA_atlas.nii.gz')]);

% USes mri-convert to bring PCA_atlas into TRUST slice dimensions
system(['mri_convert -rt nearest'...
    ' -i ' fullfile(outfolder,subjid,'TRUST','PCA_atlas.nii.gz')...
    ' -o ' fullfile(outfolder,subjid,'TRUST','PCA_atlas_slice.nii.gz')...
    ' --like ' fullfile(outfolder,subjid,'TRUST',[subjid '_3T_TRUST.nii.gz'])]);

% Applies MNI-to-ACPC warp to dilated labeled PCA atlas and follows with linear xfm
% from ACPC-to-native
system(['applywarp -v --interp=nn '...
    ' -i ' fullfile(outfolder,'PCA_Atlas_label_dilated.nii.gz')...
    ' -r ' fullfile(outfolder,subjid,'T1w','T1w.nii.gz')...
    ' --postmat=' fullfile(outfolder,subjid,'TRUST','inv_acpc.mat')...
    ' --warp=' fullfile(outfolder,subjid,'TRUST','standard2str.nii.gz')...
    ' -o ' fullfile(outfolder,subjid,'TRUST','PCA_atlas_dilated.nii.gz')]);

% USes mri-convert to bring dilated PCA_atlas into TRUST slice dimensions
system(['mri_convert -rt nearest'...
    ' -i ' fullfile(outfolder,subjid,'TRUST','PCA_atlas_dilated.nii.gz')...
    ' -o ' fullfile(outfolder,subjid,'TRUST','PCA_atlas_slice_dilated.nii.gz')...
    ' --like ' fullfile(outfolder,subjid,'TRUST',[subjid '_3T_TRUST.nii.gz'])]);

% This savees output as int (rounding in fsl is unclear)
system(['fslmaths '...
    fullfile(outfolder, subjid,'TRUST','PCA_atlas_slice_dilated.nii.gz')...
    ' -add 0 '...
    fullfile(outfolder,subjid,'TRUST', 'PCA_atlas_slice_dilated.nii.gz')...
    ' -odt int'])