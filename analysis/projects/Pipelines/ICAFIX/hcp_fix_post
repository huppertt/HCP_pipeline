#!/bin/sh

#   hcp_fix - wrapper script for FIX, for HCP pipelines
#
#   Stephen Smith, FMRIB Analysis Group
#
#   Copyright (C) 2012-2013 University of Oxford
#
#   SHCOPYRIGHT
#
#   Changes by Timothy B. Brown <tbbrown@wustl.edu>
#
#   1) Changes to support 7T ICAFIX processing based on changes originally made by Keith jamison <kjamison@umn.edu>
#   2) Changes to echo output messages to aid in debugging 
#   3) Changes to call version 3.14a of melodic instead of melodic in FSL distribution based on changes
#      originally made by Mohana Ramaratnam <mohanakannan9@gmail.com>

# Set this before calling hcp_fix instead, to make it more flexible
#FSL_FIXDIR=$( cd $(dirname $0) ; pwd)
export FSL_FIXDIR=/disk/HCP/pipeline/external/fix1.06

#export FSL_FIXDIR

# All fix settings are held in the settings.sh file - edit this file to suit your setup
. ${FSL_FIXDIR}/settings.sh

#############################################################

DEBUG="TRUE"

Debug() {
	msg="${1}"
	if [ "${DEBUG}" = "TRUE" ]; then
		echo "hcp_fix: DEBUG: ${msg}"
	fi
}

Inform() {
	msg="${1}"
	echo "hcp_fix: INFORM: ${msg}"
}

Error() {
	msg="${1}"
	echo "hcp_fix: ERROR: ${msg}"
}

Usage() {
    cat <<EOF

hcp_fix <4D_FMRI_data> <highpass> [<TrainingFile>]
  with <highpass> being the temporal highpass full-width (2*sigma) in seconds

e.g.   hcp_fix BOLD_REST1_RL/BOLD_REST1_RL.nii.gz 200

for detrending-like behaviour, set <highpass> to 2000

EOF
    exit 1
}

[ "$2" = "" ] && Usage

fmri=$1
cd `dirname $fmri`
fmri=`basename $fmri`
fmri=`$FSLDIR/bin/imglob $fmri`
[ `imtest $fmri` != 1 ] && echo No valid 4D_FMRI input file specified && exit 1
fmri_orig=$fmri

hp=$2
fmri=${fmri}_hp${hp}
unset TrainingData
if [ $# -ge 3 ]; then
	TrainingData=$3
fi

cd ${fmri}.ica


mkdir -p reg
cd reg

i_am_at=`pwd`
Debug "current folder ${i_am_at}"

$FSLDIR/bin/imln ../../../../T1w_restore_brain highres
$FSLDIR/bin/imln ../../../../wmparc wmparc
$FSLDIR/bin/imln ../mean_func example_func
$FSLDIR/bin/makerot --theta=0 > highres2example_func.mat
if [ `$FSLDIR/bin/imtest ../../../../T2w` = 1 ] ; then
  $FSLDIR/bin/fslmaths ../../../../T1w -div ../../../../T2w veins -odt float
  $FSLDIR/bin/flirt -in ${FSL_FIXDIR}/mask_files/hcp_0.7mm_brain_mask -ref veins -out veinbrainmask -applyxfm
  $FSLDIR/bin/fslmaths veinbrainmask -bin veinbrainmask
  $FSLDIR/bin/fslmaths veins -div `$FSLDIR/bin/fslstats veins -k veinbrainmask -P 50` -mul 2.18 -thr 10 -min 50 -div 50 veins
  $FSLDIR/bin/flirt -in veins -ref example_func -applyxfm -init highres2example_func.mat -out veins_exf
  $FSLDIR/bin/fslmaths veins_exf -mas example_func veins_exf
fi
cd ../..

Inform "running FIX"

# Changes to handle user specified training data file
if [ "X${TrainingData}" != X ]; then
	# User has specified a training data file

	# add .RData suffix if not already there
	if [[ "${TrainingData}" != *.RData ]]; then 
		TrainingData=${TrainingData}.RData
	fi

	# if the specified TrainingData is not a full path to an existing file,
	# assume that the user is specifying the name of a file in the training_files folder in FSL_FIXDIR
	if [ ! -f "${TrainingData}" ]; then 
		TrainingData=${FSL_FIXDIR}/training_files/${TrainingData}
	fi

	# finally, if the TrainingData file is not found, report an error and get out of here
	if [ ! -f "${TrainingData}" ]; then
		Error "FIX training data not found: ${TrainingData}"
		exit -1
	fi

	# now run fix
	${FSL_FIXDIR}/fix ${fmri}.ica ${TrainingData} 10 -m -h $hp

else
	# user has not specified a training data file
	if [ $hp != 2000 ] ; then
		Debug "since specified hp value (${hp}) is not 2000, we assume a value of 200"
		${FSL_FIXDIR}/fix ${fmri}.ica ${FSL_FIXDIR}/training_files/HCP_hp200.RData 10 -m -h 200
	else
		${FSL_FIXDIR}/fix ${fmri}.ica ${FSL_FIXDIR}/training_files/HCP_hp2000.RData 10 -m -h 2000
	fi

fi

$FSLDIR/bin/immv ${fmri}.ica/filtered_func_data_clean ${fmri}_clean

if [ -f ${fmri}.ica/Atlas_clean.dtseries.nii ] ; then
  /bin/mv ${fmri}.ica/Atlas_clean.dtseries.nii ${fmri_orig}_Atlas_hp${hp}_clean.dtseries.nii
fi

