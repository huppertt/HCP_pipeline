% Run HCP_characterize_connectivity_alldays_wmh.m or 
% HCP_characterize_connectivity_alldays_wmh_end.m first

%% This section implements Ted's lme WMH analysis by network (only DMN for now)

RSN_regions = {'Visual1', 'Visual2', 'Visual2', 'Visual2', 'Visual2', 'Visual2',...
'Visual2', 'Somatomotor', 'Somatomotor', 'Cingulo-Oper',...
'Language', 'Default', 'Visual2', 'Frontopariet', 'Frontopariet',...
'Visual2', 'Visual2', 'Visual2', 'Visual2', 'Visual2', 'Visual2',...
'Visual2', 'Visual2', 'Auditory', 'Default', 'Default',...
'Dorsal-atten', 'Default', 'Frontopariet', 'Posterior-Mu',...
'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu',...
'Posterior-Mu', 'Somatomotor', 'Cingulo-Oper', 'Cingulo-Oper',...
'Somatomotor', 'Somatomotor', 'Somatomotor', 'Somatomotor',...
'Cingulo-Oper', 'Cingulo-Oper', 'Cingulo-Oper', 'Language',...
'Somatomotor', 'Visual2', 'Visual2', 'Language', 'Somatomotor',...
'Somatomotor', 'Somatomotor', 'Somatomotor', 'Somatomotor',...
'Somatomotor', 'Cingulo-Oper', 'Cingulo-Oper', 'Cingulo-Oper',...
'Cingulo-Oper', 'Posterior-Mu', 'Posterior-Mu', 'Frontopariet',...
'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu',...
'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu',...
'Posterior-Mu', 'Frontopariet', 'Default', 'Default',...
'Posterior-Mu', 'Frontopariet', 'Cingulo-Oper', 'Default',...
'Frontopariet', 'Default', 'Frontopariet', 'Frontopariet',...
'Cingulo-Oper', 'Frontopariet', 'Cingulo-Oper', 'Posterior-Mu',...
'Posterior-Mu', 'Frontopariet', 'Posterior-Mu', 'Frontopariet',...
'Frontopariet', 'Posterior-Mu', 'Posterior-Mu', 'Language',...
'Language', 'Frontopariet', 'Frontopariet', 'Cingulo-Oper',...
'Somatomotor', 'Somatomotor', 'Somatomotor', 'Auditory',...
'Auditory', 'Cingulo-Oper', 'Cingulo-Oper', 'Auditory',...
'Cingulo-Oper', 'Cingulo-Oper', 'Orbito-Affec', 'Frontopariet',...
'Orbito-Affec', 'Cingulo-Oper', 'Cingulo-Oper', 'Somatomotor',...
'Language', 'Language', 'Posterior-Mu', 'Posterior-Mu',...
'Posterior-Mu', 'Visual1', 'Ventral-Mult', 'Default', 'Auditory',...
'Default', 'Posterior-Mu', 'Language', 'Default', 'Default',...
'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu', 'Frontopariet',...
'Posterior-Mu', 'Ventral-Mult', 'Language', 'Language', 'Visual2',...
'Default', 'Dorsal-atten', 'Dorsal-atten', 'Visual1', 'Language',...
'Frontopariet', 'Frontopariet', 'Language', 'Cingulo-Oper',...
'Cingulo-Oper', 'Frontopariet', 'Posterior-Mu', 'Posterior-Mu',...
'Visual2', 'Visual2', 'Visual2', 'Posterior-Mu', 'Visual2',...
'Visual2', 'Visual2', 'Visual2', 'Visual2', 'Posterior-Mu',...
'Posterior-Mu', 'Visual2', 'Posterior-Mu', 'Posterior-Mu',...
'Orbito-Affec', 'Cingulo-Oper', 'Somatomotor', 'Cingulo-Oper',...
'Frontopariet', 'Frontopariet', 'Default', 'Auditory', 'Auditory',...
'Auditory', 'Posterior-Mu', 'Posterior-Mu', 'Cingulo-Oper',...
'Cingulo-Oper', 'Cingulo-Oper', 'Visual1', 'Visual2', 'Visual2',...
'Visual2', 'Visual2', 'Visual2', 'Visual2', 'Somatomotor',...
'Somatomotor', 'Cingulo-Oper', 'Cingulo-Oper', 'Default',...
'Visual2', 'Frontopariet', 'Frontopariet', 'Visual2', 'Visual2',...
'Visual2', 'Visual2', 'Visual2', 'Visual2', 'Visual2', 'Visual2',...
'Auditory', 'Cingulo-Oper', 'Default', 'Dorsal-atten',...
'Dorsal-atten', 'Frontopariet', 'Posterior-Mu', 'Posterior-Mu',...
'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu',...
'Somatomotor', 'Cingulo-Oper', 'Cingulo-Oper', 'Somatomotor',...
'Somatomotor', 'Somatomotor', 'Somatomotor', 'Cingulo-Oper',...
'Cingulo-Oper', 'Cingulo-Oper', 'Language', 'Somatomotor',...
'Visual2', 'Visual2', 'Language', 'Somatomotor', 'Somatomotor',...
'Somatomotor', 'Somatomotor', 'Somatomotor', 'Somatomotor',...
'Cingulo-Oper', 'Frontopariet', 'Cingulo-Oper', 'Cingulo-Oper',...
'Posterior-Mu', 'Frontopariet', 'Frontopariet', 'Posterior-Mu',...
'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu',...
'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu',...
'Frontopariet', 'Frontopariet', 'Default', 'Posterior-Mu',...
'Frontopariet', 'Cingulo-Oper', 'Default', 'Frontopariet',...
'Frontopariet', 'Cingulo-Oper', 'Frontopariet', 'Cingulo-Oper',...
'Frontopariet', 'Cingulo-Oper', 'Posterior-Mu', 'Posterior-Mu',...
'Frontopariet', 'Posterior-Mu', 'Frontopariet', 'Frontopariet',...
'Frontopariet', 'Posterior-Mu', 'Language', 'Language',...
'Frontopariet', 'Frontopariet', 'Cingulo-Oper', 'Somatomotor',...
'Somatomotor', 'Somatomotor', 'Auditory', 'Somatomotor',...
'Cingulo-Oper', 'Cingulo-Oper', 'Auditory', 'Cingulo-Oper',...
'Cingulo-Oper', 'Orbito-Affec', 'Frontopariet', 'Orbito-Affec',...
'Cingulo-Oper', 'Cingulo-Oper', 'Somatomotor', 'Language',...
'Language', 'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu',...
'Visual1', 'Ventral-Mult', 'Default', 'Auditory', 'Default',...
'Posterior-Mu', 'Language', 'Posterior-Mu', 'Default',...
'Posterior-Mu', 'Posterior-Mu', 'Posterior-Mu', 'Frontopariet',...
'Posterior-Mu', 'Ventral-Mult', 'Language', 'Language', 'Visual2',...
'Default', 'Dorsal-atten', 'Dorsal-atten', 'Visual1', 'Language',...
'Frontopariet', 'Frontopariet', 'Language', 'Cingulo-Oper',...
'Cingulo-Oper', 'Frontopariet', 'Posterior-Mu', 'Posterior-Mu',...
'Visual2', 'Visual2', 'Visual2', 'Posterior-Mu', 'Visual2',...
'Visual2', 'Visual2', 'Visual2', 'Visual2', 'Posterior-Mu',...
'Frontopariet', 'Visual2', 'Posterior-Mu', 'Posterior-Mu',...
'Orbito-Affec', 'Cingulo-Oper', 'Somatomotor', 'Cingulo-Oper',...
'Frontopariet', 'Frontopariet', 'Default', 'Auditory', 'Auditory',...
'Auditory', 'Posterior-Mu', 'Frontopariet', 'Cingulo-Oper',...
'Cingulo-Oper', 'Cingulo-Oper'...
'Subcort', 'Subcort', 'Subcort', 'Subcort', 'Subcort', 'Subcort'...
'Subcort', 'Subcort', 'Subcort', 'Subcort', 'Subcort', 'Subcort'};

% networks = unique(RSN_regions);
networks = {'Default','Frontopariet','Dorsal-atten','Subcort','Somatomotor','Visual1','Visual2'};
% networks = {'Dorsal-atten','Subcort'};
% networks = {'Frontopariet'};

    
    % Why are there NaNs in WMH matrices?
    wmh_stack(isnan(wmh_stack)) = 0;
    
    
    %idx = ismember(RSN_regions,networks);
    
    idx_RSN = cell(2,length(networks));
    idx_names = {};
    for i = 1:length(networks)
        idx_RSN{1,i} = networks{i};
        idx_RSN{2,i} = find(ismember(RSN_regions,networks{i}));
        idx_names = [idx_names repmat(networks(i),1,length(idx_RSN{2,i}))];
    end
    idx = cell2mat(idx_RSN(2,:));


    fc_RSN = fconn_stack_all_raw_ar(idx,idx,:);
    dti_RSN = dconn_stack(idx,idx,:);
    dti_wmh_RSN = dconn_wmh_stack(idx,idx,:);
    dti_free_RSN = dti_RSN - dti_wmh_RSN; dti_free_RSN(dti_free_RSN<0)=0;
    wmh_RSN = wmh_stack(idx,idx,:);
    idx_ut = logical(triu(ones(size(fc_RSN,1)),1));
    numEdge = sum(idx_ut(:));
    numSubj = size(fc_RSN,3);
    
    linIdx = reshape(1:size(fconn_stack_all_raw_ar,1)^2,size(fconn_stack_all_raw_ar,1),size(fconn_stack_all_raw_ar,1));
    linIdx = linIdx(idx,idx);
    linIdx = linIdx(idx_ut);
    
    % Mean subtract twice to avoid roundoff issues
%     mean_fc = mean(fc_RSN,3);
%     mean_dti = mean(dti_RSN,3);
%     mean_dti_free = mean(dti_free_RSN,3);
%     mean_dti_wmh = mean(dti_wmh_RSN,3);
%     mean_wmh = mean(wmh_RSN,3);
%     for i = 1:numSubj
%         fc_RSN(:,:,i) = fc_RSN(:,:,i) - mean_fc;
%         dti_RSN(:,:,i) = dti_RSN(:,:,i) - mean_dti;
%         dti_free_RSN(:,:,i) = dti_free_RSN(:,:,i) - mean_dti_free;
%         dti_wmh_RSN(:,:,i) = dti_wmh_RSN(:,:,i) - mean_dti_wmh;
%         wmh_RSN(:,:,i) = wmh_RSN(:,:,i) - mean_wmh;
%     end
%     mean_fc = mean(fc_RSN,3);
%     mean_dti = mean(dti_RSN,3);
%     mean_dti_free = mean(dti_free_RSN,3);
%     mean_dti_wmh = mean(dti_wmh_RSN,3);
%     mean_wmh = mean(wmh_RSN,3);
%     for i = 1:numSubj
%         fc_RSN(:,:,i) = fc_RSN(:,:,i) - mean_fc;
%         dti_RSN(:,:,i) = dti_RSN(:,:,i) - mean_dti;
%         dti_free_RSN(:,:,i) = dti_free_RSN(:,:,i) - mean_dti_free;
%         dti_wmh_RSN(:,:,i) = dti_wmh_RSN(:,:,i) - mean_dti_wmh;
%         wmh_RSN(:,:,i) = wmh_RSN(:,:,i) - mean_wmh;
%     end
    
    datastruct = struct;
    datastruct.subject = cell(numEdge*numSubj,1);
    datastruct.net = cell(numEdge*numSubj,1);
    datastruct.edge = nan(numEdge*numSubj,1);
    datastruct.DTI= nan(numEdge*numSubj,1);
    datastruct.DTI_free= nan(numEdge*numSubj,1);
    datastruct.DTI_WMH= nan(numEdge*numSubj,1);
    datastruct.WMH = nan(numEdge*numSubj,1);
    datastruct.WMHfrac = nan(numEdge*numSubj,1);
    datastruct.F = nan(numEdge*numSubj,1);
    datastruct.zF = nan(numEdge*numSubj,1);
    
    for s = 1:numSubj
        
        w = wmh_RSN(:,:,s); w = w(idx_ut);
        d = dti_RSN(:,:,s); d = d(idx_ut);
        dw = dti_wmh_RSN(:,:,s); dw = dw(idx_ut);
        df = dti_free_RSN(:,:,s); df = df(idx_ut);
        f = fc_RSN(:,:,s); f = f(idx_ut);
        
        for e = 1:numEdge
            
            datastruct.subject{ (s-1)*numEdge + e } = have_conn{s};
            datastruct.edge( (s-1)*numEdge + e ) =  e;
            datastruct.F( (s-1)*numEdge + e ) =  f(e);
            datastruct.zF( (s-1)*numEdge + e ) =  atanh(f(e));
            datastruct.WMH( (s-1)*numEdge + e ) = w(e);
            datastruct.DTI( (s-1)*numEdge + e ) = d(e);
            datastruct.DTI_free( (s-1)*numEdge + e ) = df(e);
            datastruct.DTI_WMH( (s-1)*numEdge + e ) = dw(e);
            if d(e) ~= 0
                datastruct.WMHfrac( (s-1)*numEdge + e ) = dw(e)/d(e);
            else
                datastruct.WMHfrac( (s-1)*numEdge + e ) = 0;
            end
            
            [r,c] = ind2sub(372,linIdx(e));
            datastruct.net{ (s-1)*numEdge + e } = [idx_names{find(idx==r)} '_' idx_names{find(idx==c)}];
            
        end
        
    end


datastruct.subject = categorical(datastruct.subject);
datastruct.edge = categorical(datastruct.edge );
tbl = struct2table(datastruct);

tbl2=tbl;
tbl2(ismember(tbl.subject,have_conn(DTI_components>50)),:)=[];